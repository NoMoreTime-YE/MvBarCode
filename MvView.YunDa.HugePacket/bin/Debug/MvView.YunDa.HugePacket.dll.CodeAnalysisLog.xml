<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="d:\microsoft\visualstudio2015\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Namespaces>
  <Namespace Name="MvView.YunDa.HugePacket">
   <Messages>
    <Message Id="Da" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">更正命名空间名称“MvView.YunDa.HugePacket”中“Da”的大小写，将其改为“DA”。</Issue>
    </Message>
    <Message Id="Mv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">更正命名空间名称“MvView.YunDa.HugePacket”中“Mv”的大小写，将其改为“MV”。</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\bin\x86\Debug\MvView.YunDa.HugePacket.dll">
   <Modules>
    <Module Name="mvview.yunda.hugepacket.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">用强名称密钥对 'MvView.YunDa.HugePacket.dll' 进行签名。</Issue>
      </Message>
      <Message Id="Da" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">更正程序集名称 'MvView.YunDa.HugePacket.dll' 中“Da”的大小写，将其改为“DA”。</Issue>
      </Message>
      <Message Id="Mv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">更正程序集名称 'MvView.YunDa.HugePacket.dll' 中“Mv”的大小写，将其改为“MV”。</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">使用 CLSCompliant(true)来标记 'MvView.YunDa.HugePacket.dll'，因为它公开外部可见的类型。</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="MvView.Time">
       <Types>
        <Type Name="SystemTime" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'SystemTime' 是显然没有实例化过的内部类。如果是这样，请从程序集内移除该代码。如果此内部类只用于包含静态方法，请考虑添加私有构造函数，以阻止编译器生成默认构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DataTimeToSystemTime(System.DateTime)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToUInt16(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="SystemTime.cs" Line="87">由于 'Convert.ToUInt16(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'SystemTime.DataTimeToSystemTime(DateTime)' 中的此调用替换为对 'Convert.ToUInt16(object, IFormatProvider)' 的调用。如果 'Convert.ToUInt16(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLocalTime(MvView.Time.SystemDateTime&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SystemTime.GetLocalTime(ref SystemDateTime)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLocalTime(MvView.Time.SystemDateTime&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SystemTime.SetLocalTime(ref SystemDateTime)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSystemTime(MvView.Time.SystemDateTime)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="SystemTime.cs" Line="111">'SystemTime.SetSystemTime(SystemDateTime)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSystemTime(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="SystemTime.cs" Line="128">修改 'SystemTime.SetSystemTime(string)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MvView.YunDa">
       <Types>
        <Type Name="SystemClock" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'SystemClock' 是显然没有实例化过的内部类。如果是这样，请从程序集内移除该代码。如果此内部类只用于包含静态方法，请考虑添加私有构造函数，以阻止编译器生成默认构造函数。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#MicrosecSubtract(System.Int64,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="SystemClock.cs" Line="50">'SystemClock.MicrosecSubtract(long, long)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MillisecSubtract(System.Int64,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="SystemClock.cs" Line="39">'SystemClock.MillisecSubtract(long, long)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Now()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="SystemClock.cs" Line="28">'SystemClock.Now()' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SysClock_MicrosecSubtract(System.Int64,System.Int64)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'SystemClock.SysClock_MicrosecSubtract(long, long)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SystemClock.SysClock_MicrosecSubtract(long, long)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SysClock_MillisecSubtract(System.Int64,System.Int64)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'SystemClock.SysClock_MillisecSubtract(long, long)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SystemClock.SysClock_MillisecSubtract(long, long)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SysClock_Now()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'SystemClock.SysClock_Now()' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'SystemClock.SysClock_Now()'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="MvView.YunDa.HugePacket">
       <Types>
        <Type Name="BarCodeCamera" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">对 'BarCodeCamera' 提供 Dispose(bool) 的可重写实现或将该类型标记为密封。对 Dispose(false) 的调用应仅清理本机资源。对 Dispose(true) 的调用应既清理托管资源又清理本机资源。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MvView.YunDa.HugePacket.BarCodeCamera.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="59">'BarCodeCamera.BarCodeCamera(int)' 调用 'BarCodeCamera.GetPrivateProfileString(string, string, string, StringBuilder, int, string)' 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Issue>
            </Message>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="61">'BarCodeCamera.BarCodeCamera(int)' 调用 'int.TryParse(string, out int)' 但不显式检查转换是否成功。请使用条件语句中的返回值，或验证在转换失败时调用站点是否希望将 out 参数设置为默认值。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Bitmap2Byte(System.Drawing.Bitmap)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="413">'BarCodeCamera.Bitmap2Byte(Bitmap)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="413">从未使用 'BarCodeCamera.Bitmap2Byte(Bitmap)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckBarCodeCharacter(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="197">从未使用 'BarCodeCamera.CheckBarCodeCharacter(string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckCodeLen(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="177">'BarCodeCamera.CheckCodeLen(int)' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="177">从未使用 'BarCodeCamera.CheckCodeLen(int)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckDeviceKey(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="714">从未使用 'BarCodeCamera.CheckDeviceKey(string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="722">由于 'string.Compare(string, string, bool)' 的行为可能因当前用户的区域设置不同而不同，请将 'BarCodeCamera.CheckDeviceKey(string)' 中的此调用替换为对 'string.Compare(string, string, bool, CultureInfo)' 的调用。如果要向用户显示 'string.Compare(string, string, bool, CultureInfo)' 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="722">由于 'string.Compare(string, string, bool)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodeCamera.CheckDeviceKey(string)' 中的此调用替换为对 'string.Compare(string, string, StringComparison)' 的调用。如果要向用户显示 'string.Compare(string, string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeviceID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="95">更正成员名称 'BarCodeCamera.DeviceID' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_DeviceID()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="126">由于 'int.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodeCamera.DeviceID.get()' 中的此调用替换为对 'int.ToString(IFormatProvider)' 的调用。如果要向用户显示 'int.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="1087">将 'BarCodeCamera.Dispose()' 更改为调用 'GC.SuppressFinalize(object)'。这将使引入终结器的派生类型无需重新实现“IDisposable”即可调用它。</Issue>
            </Message>
            <Message Id="_DetectBarCodeEvent" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="1087">'BarCodeCamera' 包含 IDisposable 类型的字段 'BarCodeCamera._DetectBarCodeEvent': 'EventWaitHandle'。请更改 'BarCodeCamera' 的 Dispose 方法，使其针对该字段调用 Dispose 或 Close。</Issue>
            </Message>
            <Message Id="_ExitHandle" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="1087">'BarCodeCamera' 包含 IDisposable 类型的字段 'BarCodeCamera._ExitHandle': 'EventWaitHandle'。请更改 'BarCodeCamera' 的 Dispose 方法，使其针对该字段调用 Dispose 或 Close。</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="1087">修改 'BarCodeCamera.Dispose()'，使它先调用 Dispose(true)，然后对当前对象实例(在 Visual Basic 中为“this”或“Me”)调用 GC.SuppressFinalize，最后返回。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DoBarCode()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="588">修改 'BarCodeCamera.DoBarCode()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="604">修改 'BarCodeCamera.DoBarCode()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="475">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodeCamera.DoBarCode()' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="515">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodeCamera.DoBarCode()' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="516">由于 'Convert.ToInt32(object)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodeCamera.DoBarCode()' 中的此调用替换为对 'Convert.ToInt32(object, IFormatProvider)' 的调用。如果 'Convert.ToInt32(object, IFormatProvider)' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="568">由于 'string.Compare(string, string)' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodeCamera.DoBarCode()' 中的此调用替换为对 'string.Compare(string, string, StringComparison)' 的调用。如果要向用户显示 'string.Compare(string, string, StringComparison)' 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="458">在方法 'BarCodeCamera.DoBarCode()' 中，请在对 'magic' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'BarCodeCamera.GetPrivateProfileString(string, string, string, StringBuilder, int, string)'。</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'section' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'key' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="2" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'defVal' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'retVal' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="5" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'filePath' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Height" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Height(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Name="NoArguments" Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="1065">调用 'ArgumentOutOfRangeException' 的构造函数，该构造函数包含 message 和/或 paramName 参数。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#InterfaceMacAddress" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_InterfaceMacAddress()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="gateway" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="159">'BarCodeCamera.InterfaceMacAddress.get()' 声明类型为 'string' 的变量 'gateway'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
              </Message>
              <Message Id="ip" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="157">'BarCodeCamera.InterfaceMacAddress.get()' 声明类型为 'string' 的变量 'ip'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
              </Message>
              <Message Id="mac" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="156">'BarCodeCamera.InterfaceMacAddress.get()' 声明类型为 'string' 的变量 'mac'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
              </Message>
              <Message Id="mask" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="158">'BarCodeCamera.InterfaceMacAddress.get()' 声明类型为 'string' 的变量 'mask'，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#IoOutput(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="699">修改 'BarCodeCamera.IoOutput(int, string)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="Io" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="658">更正成员名称 'BarCodeCamera.IoOutput(int, string)' 中“Io”的大小写，将其改为“IO”。</Issue>
            </Message>
            <Message Id="millSeconds" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="658">从未用过 'BarCodeCamera.IoOutput(int, string)' 的参数 'millSeconds'。请移除该参数或在方法体中使用它。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LocalImageGrabbing()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="406">修改 'BarCodeCamera.LocalImageGrabbing()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="369">由于 'string.Format(string, params object[])' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodeCamera.LocalImageGrabbing()' 中的此调用替换为对 'string.Format(IFormatProvider, string, params object[])' 的调用。如果要向用户显示 'string.Format(IFormatProvider, string, params object[])' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="357">使用“String.IsNullOrEmpty”调用来替换 'BarCodeCamera.LocalImageGrabbing()' 中的 'string.operator ==(string, string)' 调用。</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="请不要将文本作为本地化参数传递" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="359">方法 'BarCodeCamera.LocalImageGrabbing()' 将一个文本字符串作为对 'Console.WriteLine(string)' 的调用的参数“value”传递。改为从资源表检索以下字符串: "没有本地目录"。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#locker" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">考虑将 'BarCodeCamera.locker' 设为非公共的或使它成为常量。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShortCutBarCode(System.Char[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="187">'BarCodeCamera.ShortCutBarCode(char[])' 似乎没有上游 public 或 protected 调用方。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="187">从未使用 'BarCodeCamera.ShortCutBarCode(char[])' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartGrab()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="log4net.ILog.ErrorFormat(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="325">由于 'ILog.ErrorFormat(string, params object[])' 的行为可能会因当前用户的区域设置不同而不同，请将 'BarCodeCamera.StartGrab()' 中的此调用替换为对 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的调用。如果 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Width" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Width(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Name="NoArguments" Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="1037">调用 'ArgumentOutOfRangeException' 的构造函数，该构造函数包含 message 和/或 paramName 参数。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="BarCodeCamera+LocalFrameData" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#Image" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_Image(System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeCamera.cs" Line="925">'BarCodeCamera.LocalFrameData.Image.set(byte[])' 似乎没有上游 public 或 protected 调用方。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="BarCodeDescribe" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExceptionMessage" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeDescribe.cs" Line="131">将 'BarCodeDescribe.ExceptionMessage' 更改为返回集合或将其转换为方法。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Regions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeDescribe.cs" Line="157">更改 'BarCodeDescribe.Regions' 中的 'List&lt;Point[]&gt;' 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_Regions(System.Collections.Generic.List`1&lt;System.Drawing.Point[]&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Name="NoArguments" Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeDescribe.cs" Line="162">调用 'ArgumentNullException' 的构造函数，该构造函数包含 message 和/或 paramName 参数。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeDescribe.cs" Line="148">由于存在继承方法 'object.GetType()'，属性名 'BarCodeDescribe.Type' 会造成混淆。请重命名或移除该属性。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Valid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Valid(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="BarCodeDescribe.cs" Line="115">'BarCodeDescribe.Valid.set(bool)' 似乎没有上游 public 或 protected 调用方。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="DetectExceptionType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#NULLCodeExceptionType" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NULL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">更正成员名称 'DetectExceptionType.NULLCodeExceptionType' 中“NULL”的大小写，将其改为“Null”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DeviceLayer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">对 'DeviceLayer' 提供 Dispose(bool) 的可重写实现或将该类型标记为密封。对 Dispose(false) 的调用应仅清理本机资源。对 Dispose(true) 的调用应既清理托管资源又清理本机资源。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_BarCodeCamera" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">由于字段 'DeviceLayer._BarCodeCamera' 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeviceID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="87">更正成员名称 'DeviceLayer.DeviceID' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="609">将 'DeviceLayer.Dispose()' 更改为调用 'GC.SuppressFinalize(object)'。这将使引入终结器的派生类型无需重新实现“IDisposable”即可调用它。</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="609">修改 'DeviceLayer.Dispose()'，使它先调用 Dispose(true)，然后对当前对象实例(在 Visual Basic 中为“this”或“Me”)调用 GC.SuppressFinalize，最后返回。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'DeviceLayer.GetPrivateProfileString(string, string, string, StringBuilder, int, string)'。</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'section' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'key' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="2" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'defVal' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'retVal' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="5" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'filePath' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialization(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MvView.YunDa.HugePacket.DeviceLayer.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="316">'DeviceLayer.Initialization(int, string)' 调用 'DeviceLayer.GetPrivateProfileString(string, string, string, StringBuilder, int, string)' 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Issue>
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="324">'DeviceLayer.Initialization(int, string)' 调用 'DeviceLayer.GetPrivateProfileString(string, string, string, StringBuilder, int, string)' 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Issue>
            </Message>
            <Message Id="System.Double.TryParse(System.String,System.Double@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="326">'DeviceLayer.Initialization(int, string)' 调用 'double.TryParse(string, out double)' 但不显式检查转换是否成功。请使用条件语句中的返回值，或验证在转换失败时调用站点是否希望将 out 参数设置为默认值。</Issue>
            </Message>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="318">'DeviceLayer.Initialization(int, string)' 调用 'int.TryParse(string, out int)' 但不显式检查转换是否成功。请使用条件语句中的返回值，或验证在转换失败时调用站点是否希望将 out 参数设置为默认值。</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="274">由于 'int.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'DeviceLayer.Initialization(int, string)' 中的此调用替换为对 'int.ToString(IFormatProvider)' 的调用。如果要向用户显示 'int.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="274">由于 'int.ToString()' 的行为可能会因当前用户的区域设置不同而不同，请将 'DeviceLayer.Initialization(int, string)' 中的此调用替换为对 'int.ToString(IFormatProvider)' 的调用。如果要向用户显示 'int.ToString(IFormatProvider)' 的结果，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
            <Message Id="log4net.ILog.ErrorFormat(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="305">由于 'ILog.ErrorFormat(string, params object[])' 的行为可能会因当前用户的区域设置不同而不同，请将 'DeviceLayer.Initialization(int, string)' 中的此调用替换为对 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的调用。如果 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnBarCode(System.Object,MvView.YunDa.HugePacket.BarCodeEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="132">使用“String.IsNullOrEmpty”调用来替换 'DeviceLayer.OnBarCode(object, BarCodeEventArgs)' 中的 'string.operator ==(string, string)' 调用。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Open()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="log4net.ILog.ErrorFormat(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="416">由于 'ILog.ErrorFormat(string, params object[])' 的行为可能会因当前用户的区域设置不同而不同，请将 'DeviceLayer.Open()' 中的此调用替换为对 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的调用。如果 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="432">由于 'ILog.ErrorFormat(string, params object[])' 的行为可能会因当前用户的区域设置不同而不同，请将 'DeviceLayer.Open()' 中的此调用替换为对 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的调用。如果 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="441">由于 'ILog.ErrorFormat(string, params object[])' 的行为可能会因当前用户的区域设置不同而不同，请将 'DeviceLayer.Open()' 中的此调用替换为对 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的调用。如果 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenAllCamera(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="log4net.ILog.ErrorFormat(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="354">由于 'ILog.ErrorFormat(string, params object[])' 的行为可能会因当前用户的区域设置不同而不同，请将 'DeviceLayer.OpenAllCamera(bool)' 中的此调用替换为对 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的调用。如果 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="370">由于 'ILog.ErrorFormat(string, params object[])' 的行为可能会因当前用户的区域设置不同而不同，请将 'DeviceLayer.OpenAllCamera(bool)' 中的此调用替换为对 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的调用。如果 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartAllCamera()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="log4net.ILog.ErrorFormat(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceLayer.cs" Line="523">由于 'ILog.ErrorFormat(string, params object[])' 的行为可能会因当前用户的区域设置不同而不同，请将 'DeviceLayer.StartAllCamera()' 中的此调用替换为对 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的调用。如果 'ILog.ErrorFormat(IFormatProvider, string, params object[])' 的结果将基于用户的输入，请指定 'CultureInfo.CurrentCulture' 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 'CultureInfo.InvariantCulture'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DeviceManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">对 'DeviceManager' 提供 Dispose(bool) 的可重写实现或将该类型标记为密封。对 Dispose(false) 的调用应仅清理本机资源。对 Dispose(true) 的调用应既清理托管资源又清理本机资源。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Camera" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="42">将 'DeviceManager.Camera' 更改为返回集合或将其转换为方法。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Close()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="285">修改 'DeviceManager.Close()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeviceID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="162">更正成员名称 'DeviceManager.DeviceID' 中“ID”的大小写，将其改为“Id”。“Id”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_DeviceID()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="173">修改 'DeviceManager.DeviceID.get()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="405">将 'DeviceManager.Dispose()' 更改为调用 'GC.SuppressFinalize(object)'。这将使引入终结器的派生类型无需重新实现“IDisposable”即可调用它。</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="405">修改 'DeviceManager.Dispose()'，使它先调用 Dispose(true)，然后对当前对象实例(在 Visual Basic 中为“this”或“Me”)调用 GC.SuppressFinalize，最后返回。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialization(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="96">修改 'DeviceManager.Initialization(int, string)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MacAddress" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_MacAddress()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="148">修改 'DeviceManager.MacAddress.get()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ManualWeighed()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="306">修改 'DeviceManager.ManualWeighed()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Open()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="261">修改 'DeviceManager.Open()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Start()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="205">修改 'DeviceManager.Start()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stop()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="229">修改 'DeviceManager.Stop()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryGetLocalTime()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="323">修改 'DeviceManager.TryGetLocalTime()' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="317">从未使用 'DeviceManager.TryGetLocalTime()' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrySetLocalTime(System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="340">修改 'DeviceManager.TrySetLocalTime(DateTime)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="335">从未使用 'DeviceManager.TrySetLocalTime(DateTime)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrySetLocalTime(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="356">修改 'DeviceManager.TrySetLocalTime(string)' 以便捕捉比 'Exception' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="351">从未使用 'DeviceManager.TrySetLocalTime(string)' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnInitialization()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Un" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="DeviceManager.cs" Line="110">更正成员名称 'DeviceManager.UnInitialization()' 中“Un”的大小写，将其改为“UN”。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EmbraceEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BarCode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_BarCode()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="EmbraceEventArgs.cs" Line="78">'EmbraceEventArgs.BarCode.get()' 创建 'ArgumentNullException' 类型的异常，该异常类型不应当在属性中引发。如果有可能会引发此异常实例，请使用其他异常类型，将该属性转换为方法，或者更改该属性的逻辑，使它不再引发异常。</Issue>
              </Message>
              <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Name="NoArguments" Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="EmbraceEventArgs.cs" Line="78">调用 'ArgumentNullException' 的构造函数，该构造函数包含 message 和/或 paramName 参数。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#GrabImage" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_GrabImage()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="EmbraceEventArgs.cs" Line="94">'EmbraceEventArgs.GrabImage.get()' 创建 'ArgumentNullException' 类型的异常，该异常类型不应当在属性中引发。如果有可能会引发此异常实例，请使用其他异常类型，将该属性转换为方法，或者更改该属性的逻辑，使它不再引发异常。</Issue>
              </Message>
              <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
               <Issue Name="NoArguments" Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="EmbraceEventArgs.cs" Line="94">调用 'ArgumentNullException' 的构造函数，该构造函数包含 message 和/或 paramName 参数。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Height" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="EmbraceEventArgs.cs" Line="56">从未使用 'EmbraceEventArgs.Height' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Height()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="EmbraceEventArgs.cs" Line="57">'EmbraceEventArgs.Height.get()' 创建 'NotImplementedException' 类型的异常，该异常类型不应当在属性中引发。如果有可能会引发此异常实例，请使用其他异常类型，将该属性转换为方法，或者更改该属性的逻辑，使它不再引发异常。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Width" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="EmbraceEventArgs.cs" Line="45">从未使用 'EmbraceEventArgs.Width' 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Width()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="EmbraceEventArgs.cs" Line="46">'EmbraceEventArgs.Width.get()' 创建 'NotImplementedException' 类型的异常，该异常类型不应当在属性中引发。如果有可能会引发此异常实例，请使用其他异常类型，将该属性转换为方法，或者更改该属性的逻辑，使它不再引发异常。</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="TaskHost" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">在 'TaskHost' 上实现 IDisposable，因为它创建下列 IDisposable 类型的成员: 'ManualResetEvent'。如果以前提供过 'TaskHost'，对于现有使用者来说，向此类型添加用于实现 IDisposable 的新成员属于重大更改。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DoAsyncCallback(System.IAsyncResult)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-04-25 01:41:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\上海出差文档及代码\非苏州版本\MvBarCode_BigPacket\MvView.YunDa.HugePacket" File="TaskHost.cs" Line="47">修改 'TaskHost.DoAsyncCallback(IAsyncResult)' 以便捕捉比 'object' 更具体的异常，或者再次引发该异常。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>程序集应具有有效的强名称</Name>
   <Description>程序集没有强名称，强名称无效，或者强名称只有经过计算机配置后才有效。不应部署处于这种状态的程序集。出现这种情况最常见原因有: 1) 对程序集进行签名后，修改了该程序集的内容；2) 签名过程失败；3) 延迟了程序集签名；4) 存在一个允许检查通过(原本不应通过)的注册表项。</Description>
   <Resolution Name="NoStrongName">用强名称密钥对 {0} 进行签名。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>避免使用未调用的私有代码</Name>
   <Description>存在对外部不可见的未调用代码，该代码不是已知的运行时入口点。如果错误地引发此冲突，请向 Visual Studio 代码分析团队发送问题报告。</Description>
   <Resolution Name="Default">{0} 似乎没有上游 public 或 protected 调用方。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>避免未实例化的内部类</Name>
   <Description>检测到显然从未实例化过的内部类。此规则不会尝试检测后期绑定创建，并且，如果某一类型的实例都是以这种方法(例如，通过 Activator.CreateInstance 或将类型作为参数传递给 TypeConverter 构造函数)创建的，则将产生误报。</Description>
   <Resolution Name="Default">{0} 是显然没有实例化过的内部类。如果是这样，请从程序集内移除该代码。如果此内部类只用于包含静态方法，请考虑添加私有构造函数，以阻止编译器生成默认构造函数。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>正确调用 GC.SuppressFinalize</Name>
   <Description>调用 Dispose 后，应调用 GC.SuppressFinalize 以取消实例的终止过程。实现 IDisposable 的对象应通过 IDisposable.Dispose 方法调用 SuppressFinalize，以防止垃圾回收器对不需要终止的对象调用 Object.Finalize。</Description>
   <Resolution Name="NotCalled">将 {0} 更改为调用 {1}。这将使引入终结器的派生类型无需重新实现“IDisposable”即可调用它。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182269.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>应释放可释放的字段</Name>
   <Description>如果实现了 IDisposable 的类型拥有同样实现 IDisposable 的字段，则封装类型的 Dispose() 实现应对每个可释放字段调用 Dispose()。</Description>
   <Resolution Name="Default">{0} 包含 IDisposable 类型的字段 {1}: {2}。请更改 {0} 的 Dispose 方法，使其针对该字段调用 Dispose 或 Close。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>不要捕捉一般异常类型</Name>
   <Description>不应捕捉 Exception 或 SystemException。捕捉一般异常类型会使库用户看不到运行时问题，并会使调试复杂化。您应该仅捕捉自己可以进行适当处理的异常。</Description>
   <Resolution Name="Default">修改 {0} 以便捕捉比 {1} 更具体的异常，或者再次引发该异常。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>不要声明可见实例字段</Name>
   <Description>在其声明类型的外部可见的实例字段会限制您更改这些数据项的实现详细信息的能力。请改用属性。属性不会降低可用性或性能，并且能够提供灵活性，因为它们隐藏了基础数据的实现详细信息。</Description>
   <Resolution Name="Default">由于字段 {0} 在其声明类型的外部可见，因此，请将它的可访问性改为私有，并添加一个与该字段当前的可访问性相同的属性以提供对该属性的访问。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>不要公开泛型列表</Name>
   <Description>不要在对象模型中公开 List&lt;T&gt;。应使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;。List&lt;T&gt; 应通过实现来使用，而不是在对象模型 API 中使用。List&lt;T&gt; 针对性能进行了优化，但代价是需要长期进行版本管理。例如，如果将 List&lt;T&gt; 返回到客户端代码，您将无法再在客户端代码修改集合时收到通知。</Description>
   <Resolution Name="Default">更改 {1} 中的 {0} 以使用 Collection&lt;T&gt;、ReadOnlyCollection&lt;T&gt; 或 KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>不要忽略方法结果</Name>
   <Description>对于返回新的字符串实例的方法，应将其结果赋予变量并随后使用。如果未将创建新对象的方法(如 String.ToLower())的结果赋给变量，则该调用便浪费了。</Description>
   <Resolution Name="HResultOrErrorCode">{0} 调用 {1} 但不使用该方法返回的 HRESULT 或错误代码。这可能会导致在出错或资源较少的情况下出现意外行为。请使用条件语句中的结果，并将结果赋给变量或将其作为变量传递给另一个方法。</Resolution>
   <Resolution Name="TryParse">{0} 调用 {1} 但不显式检查转换是否成功。请使用条件语句中的返回值，或验证在转换失败时调用站点是否希望将 out 参数设置为默认值。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>不要在意外的位置引发异常</Name>
   <Description>不要从意外的位置显式引发异常。用户不希望某些方法(如 Equals 和 GetHashCode)引发异常。因此，对这些方法的调用通常不包装在 try catch 块中。</Description>
   <Resolution Name="PropertyGetter">{0} 创建 {1} 类型的异常，该异常类型不应当在属性中引发。如果有可能会引发此异常实例，请使用其他异常类型，将该属性转换为方法，或者更改该属性的逻辑，使它不再引发异常。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>标识符的大小写应当正确</Name>
   <Description>类型、命名空间和成员标识符应采用 Pascal 大小写格式。参数标识符应采用 Camel 大小写格式。这些标识符内由两个字母组成的首字母缩略词应全部大写，例如，应采用 System.IO，而不是 System.Io。由三个或更多个字母组成的首字母缩略词应采用 Pascal 大小写格式，例如，应采用 System.Xml，而不是 System.XML。Pascal 大小写格式约定每个单词的首字母大写，如 BackColor。Camel 大小写格式约定第一个单词的首字母小写，所有后续单词的首字母都大写，如 backgroundColor。尽管有些由两个字母组成的首字母缩略词习惯采用不完全大写形式，但不能因此而排斥此规则。例如，“DbConnection”很常见，但并不正确，应采用 DBConnection。为了与现有的非托管符号方案兼容，可能需要违反此规则。但一般来说，这些符号在使用它们的程序集之外不可见。</Description>
   <Resolution Name="Assembly">更正程序集名称 {1} 中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Resolution Name="Member">更正成员名称 {1} 中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Resolution Name="MemberAbbreviation">更正成员名称 {1} 中“{0}”的大小写，将其改为“{2}”。“{2}”是一个缩写词，因此无需遵守首字母缩略词大小写规则。</Resolution>
   <Resolution Name="Namespace">更正命名空间名称“{1}”中“{0}”的大小写，将其改为“{2}”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>正确实现 IDisposable</Name>
   <Description>所有 IDisposable 类型都应正确实现 Dispose 模式。</Description>
   <Resolution Name="DisposeImplementation">修改 {0}，使它先调用 Dispose(true)，然后对当前对象实例(在 Visual Basic 中为“this”或“Me”)调用 GC.SuppressFinalize，最后返回。</Resolution>
   <Resolution Name="ProvideDisposeBool">对 {0} 提供 Dispose(bool) 的可重写实现或将该类型标记为密封。对 Dispose(false) 的调用应仅清理本机资源。对 Dispose(true) 的调用应既清理托管资源又清理本机资源。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>正确实例化参数异常</Name>
   <Description>传递给 ArgumentException 及其派生类型的构造函数的字符串参数应该是正确的。与 ArgumentException 相比，派生自 ArgumentException 的类型在 message 和 paramName 参数方面具有不一致的构造函数重载。</Description>
   <Resolution Name="NoArguments">调用 {0} 的构造函数，该构造函数包含 message 和/或 paramName 参数。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>用 CLSCompliantAttribute 标记程序集</Name>
   <Description>程序集应使用 CLSCompliant 特性显式说明其 ClS 遵从性。没有此特性的程序集不符合 CLS。即使程序集、模块或类型的某些部分不符合 CLS，这些程序集、模块或类型本身也可以是符合 CLS 的。适用下列规则: 1) 如果元素标记为 CLSCompliant，则所有不符合 CLS 的成员都必须有参数设置为 false 的 CLSCompliant 特性。2) 对于每个不符合 CLS 的成员，都必须提供一个相应的符合 CLS 的备选成员。</Description>
   <Resolution Name="Default">使用 CLSCompliant(true)来标记 {0}，因为它公开外部可见的类型。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>将成员标记为 static</Name>
   <Description>不访问实例数据或调用实例方法的方法可标记为 Static (在 Visual Basic 中为 Shared)。这样，编译器会向这些成员发出非虚拟调用站点，以防止在运行时对每个调用进行旨在确保当前对象指针为非 null 的检查。这样可以使对性能比较敏感的代码获得显著的性能提升。在某些情况下，无法访问当前对象实例表明存在正确性问题。</Description>
   <Resolution Name="Default">从未使用 {0} 的“this”参数(Visual Basic 中为“Me”)。根据需要，将成员标记为 static (Visual Basic 中为“Shared”)，或者在方法体或至少一个属性访问器中使用“this”/“Me”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>将 P/Invoke 移动到 NativeMethods 类</Name>
   <Description>此类型包含具有 DllImport 特性的成员。具有 DllImport 特性的成员应包含在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中。</Description>
   <Resolution Name="Default">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 {0}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>非常量字段不应是可见的</Name>
   <Description>除非您使用锁来小心地管理对静态字段的访问，否则这些字段应为常量。如果使用静态变量而不保证它们是线程安全的，则可能威胁到执行状态。此规则适用于托管代码库。如果分析的程序集是应用程序，则忽略此规则冲突通常是安全的。</Description>
   <Resolution Name="Default">考虑将 {0} 设为非公共的或使它成为常量。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>属性不应返回数组</Name>
   <Description>返回数组的属性容易降低代码的效率。请考虑使用集合或将其转换为方法。有关详细信息，请参见设计指南。</Description>
   <Resolution Name="Default">将 {0} 更改为返回集合或将其转换为方法。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>属性名不应与 get 方法冲突。</Name>
   <Description>发现与某一属性同名的 Get 方法。Get 方法和属性的名称应能够明确区分其功能上的差异。有关如何选择属性名以区分于方法名的信息，请参阅设计指南。</Description>
   <Resolution Name="BaseType">由于存在继承方法 {1}，属性名 {0} 会造成混淆。请重命名或移除该属性。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>移除未使用的局部变量</Name>
   <Description>移除方法实现中未使用过的或只赋过值的局部变量。</Description>
   <Resolution Name="Default">{0} 声明类型为 {2} 的变量 {1}，但从未使用过该变量或只对它进行过赋值。请使用此变量或将它移除。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>检查未使用的参数</Name>
   <Description>检查在非虚方法的方法体中未使用的参数，以确保不存在应该访问这些参数的情况。未使用的参数会带来维护和性能开销。有时，与该规则冲突可能说明方法中存在实现 Bug，即，该参数实际上应该已在方法体中使用了。如果该参数由于向后兼容性而必须存在，请忽略关于此规则的警告。</Description>
   <Resolution Name="Default">从未用过 {1} 的参数 {0}。请移除该参数或在方法体中使用它。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>指定 CultureInfo</Name>
   <Description>如果存在一个采用 CultureInfo 参数的重载，则应始终调用该重载，而不调用未采用该参数的重载。CultureInfo 类型包含区域性特定的信息，这些信息是执行数字和字符串运算(如大小写转换、格式设置和字符串比较)所必需的。如果区域性之间的转换和分析行为应始终不变，请指定 CultureInfo.InvariantCulture，否则，请指定 CultureInfo.CurrentCulture。</Description>
   <Resolution Name="Default">由于 {0} 的行为可能因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果，请将“CultureInfo.CurrentCulture”指定为“CultureInfo”参数；如果软件将存储和访问此结果(例如，要将它保留到磁盘或数据库中)，则指定“CultureInfo.InvariantCulture”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>指定 IFormatProvider</Name>
   <Description>如果存在一个采用 IFormatProvider 参数的重载，则应始终调用该重载，而不调用未采用该参数的重载。运行时中的某些方法可以将值与字符串表示形式相互进行转换，并采用一个字符串参数。该参数中包含一个或多个称为格式说明符的字符，用于指示如何对值进行转换。如果格式说明符的含义因区域性而异，则格式设置对象提供在字符串表示形式中使用的实际字符。如果排序和比较行为不得因区域性而改变，请指定 CultureInfo.InvariantCulture，否则，请指定 CultureInfo.CurrentCulture。</Description>
   <Resolution Name="IFormatProviderAlternate">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果 {2} 的结果将基于用户的输入，请指定 {3} 作为“IFormatProvider”参数。或者，如果此结果将基于由软件存储和访问的输入(例如，当从磁盘或数据库加载此结果时)，则指定 {4}。</Resolution>
   <Resolution Name="IFormatProviderAlternateString">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果，请指定 {3} 作为“IFormatProvider”参数。或者，如果软件将存储和访问此结果(例如，当将此结果保留到磁盘或数据库中时)，则指定 {4}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>指定对 P/Invoke 字符串参数进行封送处理</Name>
   <Description>在将字符串封送为 ANSI (在 Win9x 上为 Auto)时，某些字符可能会改变。如果启用了最佳匹配映射，则采用 Unicode 编码时显示样式不同的字符串将封送到相同的 ANSI 字符串，这可能会导致错误的安全决策。禁用最佳匹配映射会降低此风险，因为所有没有等效项的字符都将映射到“?”。另外，请注意，CharSet.Ansi 是所有字符串的默认封送设置；Unicode 封送必须显式指定为 DllImport 或 StructLayout 的 CharSet 设置，或者指定为具有 Unicode (或与系统相关的) UnmanagedType 的 MarshalAs 特性。</Description>
   <Resolution Name="ParameterImplicitAnsi">为了降低安全风险，请将参数 {0} 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>指定 StringComparison</Name>
   <Description>如果存在采用 StringComparison 参数的重载，则始终先调用此重载，而不是那些不接受该参数的重载。</Description>
   <Resolution Name="Default">由于 {0} 的行为可能会因当前用户的区域设置不同而不同，请将 {1} 中的此调用替换为对 {2} 的调用。如果要向用户显示 {2} 的结果(例如，在对一个项列表进行排序以便在列表框中显示时)，请指定“StringComparison.CurrentCulture”或“StringComparison.CurrentCultureIgnoreCase”作为“StringComparison”参数。如果比较不区分大小写的标识符(例如，文件路径、环境变量或注册表项和值)，则指定“StringComparison.OrdinalIgnoreCase”。或者，如果比较区分大小写的标识符，则指定“StringComparison.Ordinal”。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>使用字符串长度测试是否有空字符串</Name>
   <Description>若要测试是否有空字符串，请检查 String.Length 是否等于零。对于如 "".Equals(someString) 和 String.Empty.Equals(someString) 之类的构造，其效率低于字符串长度测试。请使用 someString.Length == 0 检查来替换它们。</Description>
   <Resolution Name="IsNullOrEmpty">使用“String.IsNullOrEmpty”调用来替换 {1} 中的 {0} 调用。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>具有可释放字段的类型应该是可释放的</Name>
   <Description>声明可释放成员的类型也应实现 IDisposable。如果该类型没有任何非托管资源，请不要在其上实现终结器。</Description>
   <Resolution Name="DependsOnFix">在 {0} 上实现 IDisposable，因为它创建下列 IDisposable 类型的成员: {1}。如果以前提供过 {0}，对于现有使用者来说，向此类型添加用于实现 IDisposable 的新成员属于重大更改。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>丢失范围之前释放对象</Name>
   <Description>如果在对某个可释放对象的所有引用超出范围之前未显式释放该对象，则当垃圾回收器运行该对象的终结器时，会在某个不确定时间释放该对象。由于可能会发生阻止该对象的终结器运行的意外事件，因此应改为显式释放该对象。</Description>
   <Resolution Name="NonExceptionEdge">在方法 {0} 中，请在对 {1} 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="请不要将文本作为本地化参数传递" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>请不要将文本作为本地化参数传递</Name>
   <Description>嵌入源代码的文本字符串难以进行本地化。对于通常应使用本地化的文本字符串的情况，要避免将文本字符串作为参数来传递。</Description>
   <Resolution Name="KnownValue">方法 {0} 将一个文本字符串作为对 {2} 的调用的参数“{1}”传递。改为从资源表检索以下字符串: {3}。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
 <Exceptions>
  <Exception Keyword="CA0063" Kind="Engine" TreatAsWarning="True">
   <Type>Microsoft.FxCop.Sdk.FxCopException</Type>
   <ExceptionMessage>* 未能加载规则集文件“MinimumRecommendedRules.ruleset”或其依赖规则集文件之一。</ExceptionMessage>
  </Exception>
 </Exceptions>
</FxCopReport>
